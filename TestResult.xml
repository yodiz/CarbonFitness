<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.nunit" total="116" errors="12" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2010-03-26" time="15:05:21">
  <environment nunit-version="2.5.3.9345" clr-version="2.0.50727.3603" os-version="Microsoft Windows NT 5.1.2600 Service Pack 3" platform="Win32NT" cwd="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\Dependencies\nUnit\net-2.0" machine-name="005-PLAN3" user="MikaelKjellqvist" user-domain="AVEGA" />
  <culture-info current-culture="sv-SE" current-uiculture="sv-SE" />
  <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.nunit" executed="True" success="False" time="130.250" asserts="0">
    <results>
      <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.Integration\bin\Debug\CarbonFitnessTest.Integration.dll" executed="True" success="True" time="126.344" asserts="0">
        <results>
          <test-suite name="CarbonFitnessTest" executed="True" success="True" time="126.344" asserts="0">
            <results>
              <test-suite name="Integration" executed="True" success="True" time="126.344" asserts="0">
                <results>
                  <test-suite name="AccountLogOnTest" executed="True" success="True" time="28.141" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.AccountLogOnTest.shouldGotoUserCreateWhenClickingRegister" executed="True" success="True" time="0.969" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.AccountLogOnTest.shouldShowLoggedOnUserAfterLogon" executed="True" success="True" time="3.656" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="CreateUserTest" executed="True" success="True" time="6.219" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.CreateUserTest.shouldCreateUser" executed="True" success="True" time="2.750" asserts="3" />
                      <test-case name="CarbonFitnessTest.Integration.CreateUserTest.shouldGotoDetailsWhenSavingUserAndHaveUserNameOnPage" executed="True" success="True" time="1.109" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="ImportIngredientsTest" executed="True" success="True" time="4.750" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.ImportIngredientsTest.shouldImportIngredients" executed="True" success="True" time="4.750" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="InputFoodTest" executed="True" success="True" time="26.125" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldAutoCompleteWhenLookingForIngredients" executed="True" success="True" time="0.094" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldBeAbleToChangeDateWithoutNoIngredientFoundMessageAppears" executed="True" success="True" time="2.141" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldEmptyFoodInputAfterSubmit" executed="True" success="True" time="1.813" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldGoToResultsAfterClickingResults" executed="True" success="True" time="1.188" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldHaveImportedIngredientsInDB" executed="True" success="True" time="2.938" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowDateSelectorOnPage" executed="True" success="True" time="0.109" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowIngredientsForCurrentUser" executed="True" success="True" time="2.500" asserts="4" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowIngredientsForDateOnPage" executed="True" success="True" time="6.219" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowNiceErrorMsgWhenInvalidDateEntered" executed="True" success="True" time="1.219" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowNiceErrorMsgWhenNoIngredientFound" executed="True" success="True" time="2.859" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowTodaysDateInDateSelector" executed="True" success="True" time="0.109" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.InputFoodTest.shouldShowViewAfterNewFoodInput" executed="True" success="True" time="0.094" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="ProfileTest" executed="True" success="True" time="8.391" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.ProfileTest.shouldNotSaveWhenStateIsInvalid" executed="True" success="True" time="1.500" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.ProfileTest.shouldSaveIdealWeightSetting" executed="True" success="True" time="0.625" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.ProfileTest.shouldShowIdealWeightSetting" executed="True" success="True" time="0.094" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.ProfileTest.shouldShowLenghtInputOnPage" executed="True" success="True" time="0.094" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.ProfileTest.shouldShowNiceErrorMessageWhenSavingInvalidIdealWeightNumber" executed="True" success="True" time="1.250" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="Results" executed="True" success="True" time="17.203" asserts="0">
                    <results>
                      <test-suite name="ResultsShowTest" executed="True" success="True" time="9.000" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.Integration.Results.ResultsShowTest.shouldShowLoggedInUsersIdealWeight" executed="True" success="True" time="0.188" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ResultsShowXmlTest" executed="True" success="True" time="8.203" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.Integration.Results.ResultsShowXmlTest.shouldHaveCalorieHistory" executed="True" success="True" time="0.078" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="SiteMasterTest" executed="True" success="True" time="13.406" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.SiteMasterTest.shouldGoToAddFoodPageAfterClickingAddFoodLinkAfterLoggedOn" executed="True" success="True" time="2.391" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.SiteMasterTest.shouldGoToEnergyPageAfterClickingAddProfileLinkAfterLoggedOn" executed="True" success="True" time="2.250" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.SiteMasterTest.shouldGoToLogOnPageAfterClickingAddFoodLinkIfNotLoggedOn" executed="True" success="True" time="0.578" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.SiteMasterTest.shouldGoToResultsAfterClickingResultsAfterLoggedOn" executed="True" success="True" time="2.953" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.SiteMasterTest.shouldGoToWeightPageAfterClickingWeightAfterLoggedOn" executed="True" success="True" time="3.047" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="WeightTest" executed="True" success="True" time="22.094" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldHaveDatePicker" executed="True" success="True" time="0.156" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldHaveTodaysDateInDatePicker" executed="True" success="True" time="0.219" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldHaveWeightHistory" executed="True" success="True" time="4.516" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldHaveWeightHistoryInDateOrder" executed="True" success="True" time="4.109" asserts="2" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldHaveWeightInputField" executed="True" success="True" time="0.281" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldSaveWeight" executed="True" success="True" time="1.141" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldShowErrorWhenTryingToSaveZeroAsWeight" executed="True" success="True" time="0.953" asserts="1" />
                      <test-case name="CarbonFitnessTest.Integration.WeightTest.shouldShowWeightForDateOnPage" executed="True" success="True" time="6.344" asserts="2" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.App.Importer\bin\Debug\CarbonFitnessTest.App.Importer.dll" executed="True" success="True" time="0.906" asserts="0">
        <results>
          <test-suite name="CarbonFitnessTest" executed="True" success="True" time="0.906" asserts="0">
            <results>
              <test-suite name="App" executed="True" success="True" time="0.906" asserts="0">
                <results>
                  <test-suite name="Importer" executed="True" success="True" time="0.906" asserts="0">
                    <results>
                      <test-suite name="IngredientImporterEngineTest" executed="True" success="True" time="0.906" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.App.Importer.IngredientImporterEngineTest.shouldCallImporter" executed="True" success="True" time="0.906" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.App.Web\bin\Debug\CarbonFitnessTest.App.Web.dll" executed="True" success="True" time="2.172" asserts="0">
        <results>
          <test-suite name="CarbonFitnessTest" executed="True" success="True" time="2.172" asserts="0">
            <results>
              <test-suite name="Web" executed="True" success="True" time="2.172" asserts="0">
                <results>
                  <test-suite name="Controller" executed="True" success="True" time="0.531" asserts="0">
                    <results>
                      <test-suite name="AccountController" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-suite name="LogOnTest" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.AccountController.LogOnTest.shouldRedirectToReturnUrlWhenLoginIsSuccessfull" executed="True" success="True" time="0.078" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="FoodController" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-suite name="InputTest" executed="True" success="True" time="0.109" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.FoodController.InputTest.shouldAddIngredientToCurrentUser" executed="True" success="True" time="0.078" asserts="4" />
                              <test-case name="CarbonFitnessTest.Web.Controller.FoodController.InputTest.shouldGetTodaysUserIngredientsOnLoad" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="CarbonFitnessTest.Web.Controller.FoodController.InputTest.shouldLoadUserIngredientsAfterAddedIngredients" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="CarbonFitnessTest.Web.Controller.FoodController.InputTest.shouldReportErrorWhenInvalidDateEnteredOnPage" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="CarbonFitnessTest.Web.Controller.FoodController.InputTest.shouldReportErrorWhenNoIngredientFound" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="HomeController" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite name="IndexTest" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.HomeController.IndexTest.shouldShowFoodLinkAfterLogin" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="IngredientController" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-suite name="SearchTest" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.IngredientController.SearchTest.shouldSearchIngredients" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ProfileController" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-suite name="InputTest" executed="True" success="True" time="0.109" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.ProfileController.InputTest.shouldNotSaveWeightWhenModelStateIsInvalid" executed="True" success="True" time="0.094" asserts="0" />
                              <test-case name="CarbonFitnessTest.Web.Controller.ProfileController.InputTest.shouldSaveIdealWeightValue" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="CarbonFitnessTest.Web.Controller.ProfileController.InputTest.shouldShowStoredIdealWeightValueForLoggedinUser" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ResultController" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite name="ShowTest" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.ResultController.ShowTest.shouldShowIdealWeight" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="UserController" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-suite name="CreateTest" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.UserController.CreateTest.shouldBeLoggedInAfterUserCreation" executed="True" success="True" time="0.063" asserts="0" />
                              <test-case name="CarbonFitnessTest.Web.Controller.UserController.CreateTest.shouldCallSaveOnRepository" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="CarbonFitnessTest.Web.Controller.UserController.CreateTest.shouldPassCreatedUserIdToDetails" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="CarbonFitnessTest.Web.Controller.UserController.CreateTest.shouldRedirectToView" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="DetailsTest" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.UserController.DetailsTest.detailsShouldReturnUser" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="WeightController" executed="True" success="True" time="0.141" asserts="0">
                        <results>
                          <test-suite name="InputTest" executed="True" success="True" time="0.141" asserts="0">
                            <results>
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldHaveListOfRecentWeights" executed="True" success="True" time="0.109" asserts="2" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldNotSaveWhenWeightIsZero" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldSaveWeight" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldShowEmptyValuesWhenNoExistingWeightFound" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldShowGivenDateEvenWhenNoUserWeightFound" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldShowWeight" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="CarbonFitnessTest.Web.Controller.WeightController.InputTest.shouldShowWeightForDateOnPage" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Models" executed="True" success="True" time="1.625" asserts="0">
                    <results>
                      <test-suite name="AmChartDataTests" executed="True" success="True" time="1.625" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.Web.Models.AmChartDataTests.shouldBeAbleToMapHistoryValuesToAmChartData" executed="True" success="True" time="0.297" asserts="0" />
                          <test-case name="CarbonFitnessTest.Web.Models.AmChartDataTests.shouldContainTwoDataPointsAndGraphs" executed="True" success="True" time="1.328" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="UserContextTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.Web.UserContextTest.shouldGetUserFromThreadIdentity" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="CarbonFitnessTest.Web.UserContextTest.shouldLookUpUserFromBackend" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.BusinessLogic\bin\Debug\CarbonFitnessTest.BusinessLogic.dll" executed="True" success="True" time="0.531" asserts="0">
        <results>
          <test-suite name="CarbonFitnessTest" executed="True" success="True" time="0.531" asserts="0">
            <results>
              <test-suite name="BusinessLogic" executed="True" success="True" time="0.531" asserts="0">
                <results>
                  <test-suite name="CarbonFitnessMembershipProviderTest" executed="True" success="True" time="0.047" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.CarbonFitnessMembershipProviderTest.shouldCheckThatPasswordLenghtIsGreaterThanThreeCharacters" executed="True" success="True" time="0.031" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.CarbonFitnessMembershipProviderTest.shouldReturnFalseWhenProvidingWrongPassword" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.CarbonFitnessMembershipProviderTest.shouldReturnTrueWhenValidating" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="HistoryValuesContainerTest" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesContainerTest.shouldInitializeLabelsAndAddHistoryValuesWhenAddingFirstHisoryValue" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="HistoryValuesTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.ShouldGetAverageDifferencePerDay" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.ShouldGetAverageHistoryValueForUndefinedDate" executed="True" success="True" time="0.000" asserts="9" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.ShouldGetNextKeyValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.ShouldGetNumberOfDaysBetweenDates" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.ShouldGetPreviousKeyValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.shouldGetTitle" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.shouldHaveIndex" executed="True" success="True" time="0.016" asserts="4" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.HistoryValuesTest.shouldLoopSortedItems" executed="True" success="True" time="0.000" asserts="15" />
                    </results>
                  </test-suite>
                  <test-suite name="IngredientBusinessLogicTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientBusinessLogicTest.shouldSearchIngredients" executed="True" success="True" time="0.016" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IngredientImporterTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientImporterTest.shouldImportIngredients" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientImporterTest.shouldThrowIngredientInsertionExceptionWhenInsertingFails" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="IngredientParserTest" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientParserTest.shouldContainRowNumberAndCloumnContent" executed="True" success="True" time="0.000" asserts="4" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientParserTest.shouldParseIngredientsFromFile" executed="True" success="True" time="0.016" asserts="56" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientParserTest.shouldRemoveSpaceWhenParsingForDecimalValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientParserTest.shouldThrowErrorWhenNotUnderstandingDecimalValue" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.IngredientParserTest.shouldTreatEmptyColumnValueAsZero" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UserBusinessLogicTest" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserBusinessLogicTest.shouldCallGetOnDataLayer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserBusinessLogicTest.shouldCallSaveOrUpdateOnDataLayer" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserBusinessLogicTest.shouldGetUserFromUsername" executed="True" success="True" time="0.000" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UserIngredientBusinessLogicTest" executed="True" success="True" time="0.203" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientBusinessLogicTest.shouldAddUserIngredient" executed="True" success="True" time="0.172" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientBusinessLogicTest.shouldGetCalorieHistory" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientBusinessLogicTest.shouldGetUserIngredients" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientBusinessLogicTest.shouldNotBeAbleToAddAnIngredientThatDoesNotExistInTheDatabase" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientBusinessLogicTest.shouldThrowWhenDateNotInSqlRange" executed="True" success="True" time="0.000" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="UserIngredientExtensionsTest" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserIngredientExtensionsTest.shouldGetCaloriesForActualMeasure" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="UserProfileBusinessLogicTest" executed="True" success="True" time="0.078" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserProfileBusinessLogicTest.shouldCreateUserProfileIfNotExistingForUser" executed="True" success="True" time="0.031" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserProfileBusinessLogicTest.shouldHaveImplementation" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserProfileBusinessLogicTest.shouldReuseExistingUserProfileForUserIfExisting" executed="True" success="True" time="0.016" asserts="0" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserProfileBusinessLogicTest.shouldSaveIdealWeight" executed="True" success="True" time="0.016" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite name="UserWeightBusinessLogicTest" executed="True" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserWeightBusinessLogicTest.shouldGetUserWeightHistoryForUser" executed="True" success="True" time="0.063" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserWeightBusinessLogicTest.shouldGetWeight" executed="True" success="True" time="0.000" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserWeightBusinessLogicTest.shouldOverwriteUserWeight" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserWeightBusinessLogicTest.shouldSaveUserWeight" executed="True" success="True" time="0.016" asserts="1" />
                      <test-case name="CarbonFitnessTest.BusinessLogic.UserWeightBusinessLogicTest.shouldThrowErrorIfTryingToSaveZeroInWeight" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Documents and Settings\Mikael Kjellqvist\Mina dokument\Visual Studio 2008\Projects\CarbonFitness\CarbonFitnessTest.DataLayer\bin\Debug\CarbonFitnessTest.DataLayer.dll" executed="True" success="False" time="0.250" asserts="0">
        <results>
          <test-suite name="CarbonFitnessTest" executed="True" success="False" time="0.250" asserts="0">
            <results>
              <test-suite name="DataLayer" executed="True" success="False" time="0.234" asserts="0">
                <results>
                  <test-suite name="Repository" executed="True" success="False" time="0.234" asserts="0">
                    <results>
                      <test-suite name="IngredientRepositoryTest" executed="True" success="False" time="0.219" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.IngredientRepositoryTest.shouldGetIngredientByName" executed="True" success="False" time="0.188" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.IngredientRepositoryTest.shouldMatchBothUpperAndLowerCaseOnName" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.IngredientRepositoryTest.shouldReturnmatchingItemsForSearchParamter" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="UserIngredientRepositoryTest" executed="True" success="False" time="0.000" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserIngredientRepositoryTest.shouldGetUserIngredientsFromUserId" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserIngredientRepositoryTest.shouldSaveUserIngredient" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="UserProfileRepositoryTest" executed="True" success="False" time="0.016" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserProfileRepositoryTest.shouldHaveGetByUserIdMethod" executed="True" success="False" time="0.016" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserProfileRepositoryTest.shouldReturnProfileForUser" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="UserRepositoryTest" executed="True" success="False" time="0.000" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserRepositoryTest.shouldHaveCreateMethod" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="UserWeightRepositoryTest" executed="True" success="False" time="0.000" asserts="0">
                        <results>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserWeightRepositoryTest.shouldFindByDate" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserWeightRepositoryTest.shouldGetHistoryList" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserWeightRepositoryTest.shouldGetHistoryListInDateOrder" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                          <test-case name="CarbonFitnessTest.DataLayer.Repository.UserWeightRepositoryTest.shouldSaveOrUpdate" executed="True" success="False" time="0.000" asserts="0">
                            <failure>
                              <message><![CDATA[SharpArch.Core.PreconditionException : Please add an AppSetting to your app.config for 'nhibernate.mapping.assembly.' This setting takes a comma delimited list of assemblies containing NHibernate mapping files. Including '.dll' at the end of each is optional.
TearDown : System.NullReferenceException : Object reference not set to an instance of an object.]]></message>
                              <stack-trace><![CDATA[at SharpArch.Core.Check.Require(Boolean assertion, String message)
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.GetMappingAssemblies()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeNHibernateSession()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.InitializeDatabase()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.SetUp()
--TearDown
at SharpArch.Data.NHibernate.NHibernateSession.CloseAllSessions()
at SharpArch.Testing.NHibernate.RepositoryTestsHelper.Shutdown()
at SharpArch.Testing.NUnit.NHibernate.RepositoryTestsBase.TearDown()
]]></stack-trace>
                            </failure>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>